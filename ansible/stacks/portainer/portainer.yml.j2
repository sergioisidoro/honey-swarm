version: "3.7"

services:
  agent:
    image: {{portainer_agent_image}}
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
      AGENT_PORT: 9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - portainer-network
    deploy:
      mode: global

  portainer:
    image: {{portainer_image}}
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9000:9000"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - portainer-network
      - public-network
    restart: always
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.http.services.portainer.loadbalancer.server.port=9000
        - traefik.http.routers.portainer.rule=Host(`portainer.{{ domains.main }}`)
        - traefik.http.routers.portainer.entrypoints=http,https
{% if internal_services_ip_whitelist is defined %}
        - traefik.http.middlewares.portainer-allowed-ips.ipwhitelist.sourcerange={{ internal_services_ip_whitelist }}
        - traefik.http.routers.portainer.middlewares=portainer-allowed-ips
{% endif %}
      placement:
        constraints: [node.role == manager]
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      rollback_config:
        parallelism: 1
        order: start-first

volumes:
  portainer-data:

networks:
  portainer-network:
  public-network:
    external: true
